---
kind: pipeline
type: docker
name: install-dependencies-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: cache-rebuild
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    mount:
    - .cache
    rebuild: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: cache-flush
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    flush: true
    flush_age: 14
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    event:
    - push
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

---
kind: pipeline
type: docker
name: coding-standard-php7.3

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: php-style
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make test-php-style

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: phpstan-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: php-phpstan
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make test-php-phpstan

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: phan-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: phan
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make test-php-phan

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: phan-php7.2

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.2
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: phan
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make test-php-phan

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: phan-php7.3

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.3
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: phan
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make test-php-phan

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- install-dependencies-php7.1

---
kind: pipeline
type: docker
name: test-javascript

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: test-js
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make test-js

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - javascript
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: litmus-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: tech-preview
  pull: always
  image: owncloudci/php:7.1
  commands:
  - php occ config:system:set dav.enable.tech_preview --value=true --type boolean

- name: setup-storage
  pull: always
  image: owncloudci/php:7.1
  commands:
  - mkdir -p /drone/src/work/local_storage
  - php occ app:enable files_external
  - php occ config:system:set files_external_allow_create_new_local --value=true
  - php occ config:app:set core enable_external_storage --value=yes
  - php occ files_external:create local_storage local null::null -c datadir=/drone/src/work/local_storage
  - php occ user:add --password-from-env user1
  environment:
    OC_PASS: 123456

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: create-share
  pull: always
  image: owncloudci/php:7.1
  commands:
  - curl -k -s -u user1:123456 -X MKCOL "https://server/remote.php/webdav/new_folder"
  - curl -k -s -u user1:123456 "https://server/ocs/v2.php/apps/files_sharing/api/v1/shares" --data "path=/new_folder&shareType=0&permissions=15&name=new_folder&shareWith=admin"
  - echo -n "PUBLIC_TOKEN=" > .env
  - curl -k -s -u user1:123456 "https://server/ocs/v2.php/apps/files_sharing/api/v1/shares" --data "path=/new_folder&shareType=3&permissions=15&name=new_folder" | grep token | cut -d">" -f2 | cut -d"<" -f1 >> .env

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: old-endpoint
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/webdav"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: new-endpoint
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/dav/files/admin"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: new-mount
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/dav/files/admin/local_storage/"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: old-mount
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/webdav/local_storage/"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: new-shared
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/dav/files/admin/new_folder/"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: old-shared
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL="https://server/remote.php/webdav/new_folder/"
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove props locks http

- name: public-share
  pull: always
  image: owncloud/litmus:latest
  commands:
  - source .env
  - export LITMUS_URL='https://server/remote.php/dav/public-files/'$PUBLIC_TOKEN
  - /usr/local/bin/litmus-wrapper
  environment:
    LITMUS_PASSWORD: admin
    LITMUS_USERNAME: admin
    TESTS: basic copymove http

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

- name: server
  pull: always
  image: owncloudci/php:7.1
  command:
  - /usr/local/bin/apachectl
  - -e
  - debug
  - -D
  - FOREGROUND
  environment:
    APACHE_CONFIG_TEMPLATE: ssl
    APACHE_SSL_CERT: /drone/server.crt
    APACHE_SSL_CERT_CN: server
    APACHE_SSL_KEY: /drone/server.key
    APACHE_WEBROOT: /drone/src

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: caldav-new-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: dav-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/caldav/install.sh

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: dav-test
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/caldav/script.sh

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: caldav-old-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: dav-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/caldav-old-endpoint/install.sh

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: dav-test
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/caldav-old-endpoint/script.sh

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: carddav-new-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: dav-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/carddav/install.sh

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: dav-test
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/carddav/script.sh

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: carddav-old-php7.1

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: dav-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/carddav-old-endpoint/install.sh

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: dav-test
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash apps/dav/tests/ci/carddav-old-endpoint/script.sh

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-mariadb10.2

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: mariadb

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-mysql5.5

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mysql

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: mysql

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: mysql
  pull: always
  image: mysql:5.5
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-mysql5.7

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mysql

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: mysql

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: mysql
  pull: always
  image: mysql:5.7
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-postgres9.4

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: postgres

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: postgres

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: postgres
  pull: always
  image: postgres:9.4
  environment:
    POSTGRES_DB: owncloud
    POSTGRES_PASSWORD: owncloud
    POSTGRES_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-oracle

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: oracle

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: oracle

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: oracle
  pull: always
  image: deepdiver/docker-oracle-xe-11g:latest
  environment:
    ORACLE_DB: XE
    ORACLE_DISABLE_ASYNCH_IO: true
    ORACLE_PASSWORD: oracle
    ORACLE_USER: system

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.2-sqlite

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.2
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.2
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.2
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: false
    DB_TYPE: sqlite

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.2-mariadb10.2

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.2
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.2
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.2
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.2
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: false
    DB_TYPE: mariadb

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.3-sqlite

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.3
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.3
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.3
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: false
    DB_TYPE: sqlite

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.3-mariadb10.2

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.3
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.3
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: mariadb

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.3
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.3
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: false
    DB_TYPE: mariadb

services:
- name: mariadb
  pull: always
  image: mariadb:10.2
  environment:
    MYSQL_DATABASE: owncloud
    MYSQL_PASSWORD: owncloud
    MYSQL_ROOT_PASSWORD: owncloud
    MYSQL_USER: owncloud

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-webdav

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: webdav

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: webdav
  pull: always
  image: owncloudci/php:latest
  command:
  - /usr/local/bin/apachectl
  - -D
  - FOREGROUND
  environment:
    APACHE_CONFIG_TEMPLATE: webdav

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-sftp

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    FILES_EXTERNAL_TYPE: sftp

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: sftp
  pull: always
  image: atmoz/sftp
  environment:
    SFTP_USERS: test:12345:1001::upload

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: phpunit-php7.1-sqlite-scality

platform:
  os: linux
  arch: amd64

workspace:
  base: /drone
  path: src

steps:
- name: cache-restore
  pull: always
  image: plugins/s3-cache:1
  settings:
    access_key:
      from_secret: cache_s3_access_key
    endpoint:
      from_secret: cache_s3_endpoint
    restore: true
    secret_key:
      from_secret: cache_s3_secret_key
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

- name: composer-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-composer-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: vendorbin-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make vendor-bin-deps
  environment:
    COMPOSER_HOME: /drone/src/.cache/composer

- name: yarn-install
  pull: always
  image: owncloudci/php:7.1
  commands:
  - make install-nodejs-deps
  environment:
    NPM_CONFIG_CACHE: /drone/src/.cache/npm
    YARN_CACHE_FOLDER: /drone/src/.cache/yarn
    bower_storage__packages: /drone/src/.cache/bower

- name: install-server
  pull: always
  image: owncloudci/php:7.1
  commands:
  - bash tests/drone/install-server.sh
  - php occ a:l
  - php occ config:system:set trusted_domains 1 --value=server
  - php occ log:manage --level 2
  - php occ config:list
  - php occ security:certificates:import /drone/server.crt
  - php occ security:certificates
  environment:
    DB_TYPE: sqlite

- name: install-extra-apps
  pull: always
  image: owncloudci/php:7.1
  commands:
  - git clone https://github.com/owncloud/files_primary_s3.git /drone/src/apps/files_primary_s3
  - cd /drone/src/apps/files_primary_s3
  - composer install
  - cd /drone/src
  - php occ a:l
  - php occ a:e files_primary_s3
  - php occ a:l

- name: setup-scality
  pull: always
  image: owncloudci/php:7.1
  commands:
  - wait-for-it -t 60 scality:8000
  - cp /drone/src/apps/files_primary_s3/tests/drone/scality.config.php /drone/src/config
  - php occ s3:create-bucket owncloud --accept-warning

- name: fix-permissions
  pull: always
  image: owncloudci/php:7.1
  commands:
  - chown -R www-data /drone/src

- name: owncloud-log-server
  pull: always
  image: owncloud/ubuntu:18.04
  detach: true
  commands:
  - tail -f /drone/src/data/owncloud.log

- name: phpunit-tests
  pull: always
  image: owncloudci/php:7.1
  commands:
  - su-exec www-data bash tests/drone/test-phpunit.sh
  environment:
    COVERAGE: true
    DB_TYPE: sqlite
    PRIMARY_OBJECTSTORE: files_primary_s3

- name: coverage-upload
  pull: always
  image: plugins/codecov:2
  settings:
    files:
    - "*.xml"
    flags:
    - phpunit
    paths:
    - tests/output/coverage
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    instance:
    - drone.owncloud.services
    - drone.owncloud.com

services:
- name: scality
  pull: always
  image: owncloudci/scality-s3server:latest
  environment:
    HOST_NAME: scality

trigger:
  ref:
  - refs/pull/**
  - refs/tags/**
  - refs/heads/master

depends_on:
- coding-standard-php7.3
- phpstan-php7.1
- phan-php7.1
- phan-php7.2
- phan-php7.3

---
kind: pipeline
type: docker
name: chat-notifications

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: notify-rocketchat
  pull: always
  image: plugins/slack:1
  settings:
    channel: server
    webhook:
      from_secret: public_rocketchat

trigger:
  ref:
  - refs/tags/**
  - refs/heads/master
  status:
  - success
  - failure

depends_on:
- test-javascript
- litmus-php7.1
- caldav-new-php7.1
- caldav-old-php7.1
- carddav-new-php7.1
- carddav-old-php7.1
- phpunit-php7.1-sqlite
- phpunit-php7.1-mariadb10.2
- phpunit-php7.1-mysql5.5
- phpunit-php7.1-mysql5.7
- phpunit-php7.1-postgres9.4
- phpunit-php7.1-oracle
- phpunit-php7.2-sqlite
- phpunit-php7.2-mariadb10.2
- phpunit-php7.3-sqlite
- phpunit-php7.3-mariadb10.2
- phpunit-php7.1-sqlite-webdav
- phpunit-php7.1-sqlite-sftp
- phpunit-php7.1-sqlite-scality

...
